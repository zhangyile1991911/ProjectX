//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.common
{ 

public sealed partial class GlobalConfig :  Bright.Config.BeanBase 
{
    public GlobalConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        { if(!_json["int_val"].IsNumber) { throw new SerializationException(); }  IntVal = _json["int_val"]; }
        { if(!_json["float_val"].IsNumber) { throw new SerializationException(); }  FloatVal = _json["float_val"]; }
        { if(!_json["string_val"].IsString) { throw new SerializationException(); }  StringVal = _json["string_val"]; }
        PostInit();
    }

    public GlobalConfig(string id, string desc, int int_val, float float_val, string string_val ) 
    {
        this.Id = id;
        this.Desc = desc;
        this.IntVal = int_val;
        this.FloatVal = float_val;
        this.StringVal = string_val;
        PostInit();
    }

    public static GlobalConfig DeserializeGlobalConfig(JSONNode _json)
    {
        return new common.GlobalConfig(_json);
    }

    public string Id { get; private set; }
    public string Desc { get; private set; }
    public int IntVal { get; private set; }
    public float FloatVal { get; private set; }
    public string StringVal { get; private set; }

    public const int __ID__ = -848234488;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Desc:" + Desc + ","
        + "IntVal:" + IntVal + ","
        + "FloatVal:" + FloatVal + ","
        + "StringVal:" + StringVal + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
