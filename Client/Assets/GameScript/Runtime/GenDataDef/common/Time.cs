//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.common
{ 

public sealed partial class Time :  Bright.Config.BeanBase 
{
    public Time(JSONNode _json) 
    {
        { if(!_json["hour"].IsNumber) { throw new SerializationException(); }  Hour = _json["hour"]; }
        { if(!_json["minutes"].IsNumber) { throw new SerializationException(); }  Minutes = _json["minutes"]; }
        PostInit();
    }

    public Time(int hour, int minutes ) 
    {
        this.Hour = hour;
        this.Minutes = minutes;
        PostInit();
    }

    public static Time DeserializeTime(JSONNode _json)
    {
        return new common.Time(_json);
    }

    /// <summary>
    /// 小时
    /// </summary>
    public int Hour { get; private set; }
    /// <summary>
    /// 分钟
    /// </summary>
    public int Minutes { get; private set; }

    public const int __ID__ = -1970974448;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Hour:" + Hour + ","
        + "Minutes:" + Minutes + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
