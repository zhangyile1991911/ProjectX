//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.common
{ 

public sealed partial class value_region :  Bright.Config.BeanBase 
{
    public value_region(JSONNode _json) 
    {
        { if(!_json["start_value"].IsNumber) { throw new SerializationException(); }  StartValue = _json["start_value"]; }
        { if(!_json["end_value"].IsNumber) { throw new SerializationException(); }  EndValue = _json["end_value"]; }
        PostInit();
    }

    public value_region(int start_value, int end_value ) 
    {
        this.StartValue = start_value;
        this.EndValue = end_value;
        PostInit();
    }

    public static value_region Deserializevalue_region(JSONNode _json)
    {
        return new common.value_region(_json);
    }

    /// <summary>
    /// 闭区间
    /// </summary>
    public int StartValue { get; private set; }
    /// <summary>
    /// 闭区间
    /// </summary>
    public int EndValue { get; private set; }

    public const int __ID__ = 887748773;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "StartValue:" + StartValue + ","
        + "EndValue:" + EndValue + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
