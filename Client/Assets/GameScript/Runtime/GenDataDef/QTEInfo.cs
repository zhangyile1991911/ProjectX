//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class QTEInfo :  Bright.Config.BeanBase 
{
    public QTEInfo(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["score"].IsNumber) { throw new SerializationException(); }  Score = _json["score"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        { if(!_json["anim_res_path"].IsString) { throw new SerializationException(); }  AnimResPath = _json["anim_res_path"]; }
        { if(!_json["tag"].IsNumber) { throw new SerializationException(); }  Tag = (food.flavorTag)_json["tag"].AsInt; }
        { if(!_json["key_code"].IsNumber) { throw new SerializationException(); }  KeyCode = _json["key_code"]; }
        PostInit();
    }

    public QTEInfo(int id, string name, int score, string desc, string anim_res_path, food.flavorTag tag, int key_code ) 
    {
        this.Id = id;
        this.Name = name;
        this.Score = score;
        this.Desc = desc;
        this.AnimResPath = anim_res_path;
        this.Tag = tag;
        this.KeyCode = key_code;
        PostInit();
    }

    public static QTEInfo DeserializeQTEInfo(JSONNode _json)
    {
        return new QTEInfo(_json);
    }

    /// <summary>
    /// QTEId
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 加分
    /// </summary>
    public int Score { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 动画
    /// </summary>
    public string AnimResPath { get; private set; }
    /// <summary>
    /// 标签
    /// </summary>
    public food.flavorTag Tag { get; private set; }
    /// <summary>
    /// ascii码
    /// </summary>
    public int KeyCode { get; private set; }

    public const int __ID__ = 1344209488;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Score:" + Score + ","
        + "Desc:" + Desc + ","
        + "AnimResPath:" + AnimResPath + ","
        + "Tag:" + Tag + ","
        + "KeyCode:" + KeyCode + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
