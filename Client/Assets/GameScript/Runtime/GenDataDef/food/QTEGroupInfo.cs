//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.food
{ 

public sealed partial class QTEGroupInfo :  Bright.Config.BeanBase 
{
    public QTEGroupInfo(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var __json0 = _json["qte_appear_infos"]; if(!__json0.IsArray) { throw new SerializationException(); } QteAppearInfos = new System.Collections.Generic.List<food.qte_info>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { food.qte_info __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = food.qte_info.Deserializeqte_info(__e0);  }  QteAppearInfos.Add(__v0); }   }
        PostInit();
    }

    public QTEGroupInfo(int id, System.Collections.Generic.List<food.qte_info> qte_appear_infos ) 
    {
        this.Id = id;
        this.QteAppearInfos = qte_appear_infos;
        PostInit();
    }

    public static QTEGroupInfo DeserializeQTEGroupInfo(JSONNode _json)
    {
        return new food.QTEGroupInfo(_json);
    }

    public int Id { get; private set; }
    public System.Collections.Generic.List<food.qte_info> QteAppearInfos { get; private set; }

    public const int __ID__ = 1062385403;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in QteAppearInfos) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in QteAppearInfos) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "QteAppearInfos:" + Bright.Common.StringUtil.CollectionToString(QteAppearInfos) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
